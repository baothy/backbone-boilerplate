// Filename: router.js
define([
  'backbone',
  'views/container/containerView',
  'views/container/personnagesView',
  'views/container/playGameView',
  'views/footer/FooterView',
  'views/header/HeaderView',
  'views/subviews/signupView',
  'views/subviews/signupConfirmView',
  'views/subviews/createAvatarConfirmView',
  'views/subviews/pwdForgotView',
  'views/subviews/emailSentView',
  'views/subviews/notConnectedView',
  'views/subviews/avatarView',
  'views/subviews/gameView',
  'views/subviews/quizGameView',
  'views/subviews/validateEmailView',
  'views/container/creditsView',
  'views/container/episodesView',
  'views/subviews/unsubscribeView',
  'views/subviews/videotutorialView',
  'views/subviews/noFlashView',
  'views/webGames/quizView',
  'views/webGames/surveyView',
  'views/webGames/voteView',
  'views/webGames/webGamesView',
  'models/login/loginModel',
  'utils'
], function(Backbone, ContainerView, PersonnagesView, PlayGameView, FooterView, HeaderView, SignupView, SignupConfirmView, CreateAvatarConfirmView, PwdForgotView, EmailSentView, NotConnectedView, AvatarView, GameView, QuizGameView, ValidateEmailView, CreditsView, EpisodesView, UnsubscribeView, VideotutorialView, NoFlashView, QuizView, SurveyView, VoteView, WebGamesView, LoginModel, utils) {

  var AppRouter = Backbone.Router.extend({
    routes: {
      // Define some URL routes
      'home': 'defaultAction',
      'header': 'header',
      'signup': 'signup',
      'editProfile': 'editProfile',
      'signup-confirm?key=:validateKey': 'signup-confirm',
      'unsubscribe?email=:email': 'unsubscribe',
      'createAvatarConfirm': 'createAvatarConfirm',
      'pwdForgot': 'pwdForgot',
      'emailSent': 'emailSent',
      'notConnected?type=:type': 'notConnected',
      'personnages': 'personnages',
      'avatar': 'avatar',
      'game': 'game',
      'quizgame': 'quizgame',
      'playgame': 'playgame',
      'validateEmail': 'validateEmail',
      'episodes': 'episodes',
      'credits': 'credits',
      'videotutorial': 'videotutorial',
      'noFlash': 'noFlash',
      'quiz': 'quiz',
      'survey': 'survey',
      'vote': 'vote',
      'webGames': 'webGames',
      // Default
      '*actions': 'defaultAction'
    }
  });

  var initialize = function(){
    var isDefaultPageViewed = false;

    new HeaderView().render();

    window.app_router = new AppRouter();

    app_router.on('route:defaultAction', function (actions) {
      $('.inner-header-login li').removeClass('selected');
      $('.inner-header-login .accueil').addClass('selected');

      if (window.previousView && window.previousView.clean) window.previousView.clean();

      var view = new ContainerView();
      window.previousView = view;
      view.render();

      isDefaultPageViewed = true;
    });

    app_router.on('route:signup', function (actions) {

      if (isDefaultPageViewed) {
        var view = new SignupView({isNew: true});
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:editProfile', function (actions) {

      if (isDefaultPageViewed) {
        var view = new SignupView({isNew: false});
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:validateEmail', function (actions) {
      if (isDefaultPageViewed) {
        var view = new ValidateEmailView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:unsubscribe', function (email) {
      if (window.previousView && window.previousView.clean) window.previousView.clean();
      new ContainerView().render();

      var view = new UnsubscribeView({email: email});
      window.previousView = view;
      view.render();
    });

    app_router.on('route:signup-confirm', function (validateKey) {
      if (window.previousView && window.previousView.clean) window.previousView.clean();
      isDefaultPageViewed = true;
      new ContainerView().render();

      var loginModel = new LoginModel(),
          that       = this;

      loginModel.set('validationKey', validateKey);
      loginModel.validateEmail(null, {success: $.proxy(success, that), error: $.proxy(error, that)});

      function success (model, response) {
        if (response.Result.ErrorCode === '0x701018') {
          console.log(response.Result.Message);
          alert(response.Result.Message);
        } else if (response.Result.ErrorCode === '0x701017') {
          console.log(response.Result.Message);
          alert(response.Result.Message);
        } else {
          var view = new SignupConfirmView({validateKey: validateKey});
          window.previousView = view;
          view.render();
          window.user = response.User;
          utils.header.userLogged();
          utils.header.setLoginCookie(false);
        }
      }

      function error (model, response) {

      }

    });

    app_router.on('route:createAvatarConfirm', function (actions) {
      if (isDefaultPageViewed) {
        var view = new CreateAvatarConfirmView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:pwdForgot', function (actions) {
      if (isDefaultPageViewed) {
        var view = new PwdForgotView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:noFlash', function (actions) {
      if (isDefaultPageViewed) {
        var view = new NoFlashView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:emailSent', function (actions) {
      if (isDefaultPageViewed) {
        var view = new EmailSentView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:notConnected', function (type) {
      type = type || 'default';

      if (isDefaultPageViewed) {
        var view = new NotConnectedView({type: type});
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:credits', function (actions) {
      if (isDefaultPageViewed) {
        var view = new CreditsView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:personnages', function (actions) {
      if (isDefaultPageViewed) {
        if (window.previousView && window.previousView.clean) window.previousView.clean();
        $('.inner-header-login li').removeClass('selected');
        $('.inner-header-login .personnage').addClass('selected');

        var view = new PersonnagesView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:episodes', function (actions) {
      if (isDefaultPageViewed) {
        if (window.previousView && window.previousView.clean) window.previousView.clean();
        $('.inner-header-login li').removeClass('selected');
        $('.inner-header-login .episodes').addClass('selected');
        var view = new EpisodesView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:avatar', function (actions) {
      if (isDefaultPageViewed) {

        if (window.isMobile) {
          app_router.navigate('noFlash', true);
          return;
        }

        var view = new AvatarView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:game', function (actions) {
      if (isDefaultPageViewed) {

        if (window.isMobile) {
          app_router.navigate('noFlash', true);
          return;
        }

        var view = new GameView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:quizgame', function (actions) {
      if (isDefaultPageViewed) {

        if (window.isMobile) {
          app_router.navigate('noFlash', true);
          return;
        }

        var view = new QuizGameView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:webGames', function (actions) {

      if (!window.isMobile && window.user === undefined || window.user === null) {
        app_router.navigate('notConnected?type=quiz', true);
      } else {

        if(document.URL.indexOf('#webGames') && (/iPhone|iPod|Android|BlackBerry|Opera Mini|IEMobile/).test(navigator.userAgent || navigator.vendor || window.opera)) {
          location.reload();
        }

        if (window.previousView && window.previousView.clean) window.previousView.clean();

        $('.inner-header-login li').removeClass('selected');
        $('.inner-header-login .quiz').addClass('selected');

        var view = new WebGamesView({isNew: false});
        window.previousView = view;
        view.render();
      }

    });

    app_router.on('route:quiz', function (actions) {

      if (isDefaultPageViewed) {
        if (window.previousView && window.previousView.clean) window.previousView.clean();
        var view = new QuizView({isNew: false});
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:survey', function (actions) {

      if (isDefaultPageViewed) {
        if (window.previousView && window.previousView.clean) window.previousView.clean();
        var view = new SurveyView({isNew: false});
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:vote', function (actions) {

      if (isDefaultPageViewed) {
        if (window.previousView && window.previousView.clean) window.previousView.clean();
        var view = new VoteView({isNew: false});
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:videotutorial', function (actions) {
      if (isDefaultPageViewed) {

        if (window.isMobile) {
          app_router.navigate('noFlash', true);
          return;
        }

        var view = new VideotutorialView();
        window.previousView = view;
        view.render();
      } else {
        app_router.navigate('/', true);
      }
    });

    app_router.on('route:playgame', function (actions) {
      if (window.previousView && window.previousView.clean) window.previousView.clean();
      var view = new PlayGameView();
      window.previousView = view;
      view.render();
    });

    new FooterView().render();

    Backbone.history.start();
  };

  return {
    initialize: initialize
  };

});
